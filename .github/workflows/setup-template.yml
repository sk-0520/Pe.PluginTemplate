name: Setup Template
on:
    push:
      branches-ignore:
        - ci-test
    workflow_dispatch:
      inputs:
        PE_REVISION:
          type: string
          required: true
          description: 'Pe SHA1'


concurrency:
    group: ${{ github.ref }}
    cancel-in-progress: true


env:
    PE_REPOSITORY_OWNER: sk-0520
    PE_REPOSITORY_NAME: Pe
    PE_REPOSITORY_BRUNCH: master


permissions:
    contents: write
    pull-requests: write


jobs:
    create-template:
        name: "create template"
        runs-on: ubuntu-latest

        steps:
            - name: <Checkout> Repository
              uses: actions/checkout@v4
              with:
                repository: ${{ env.PE_REPOSITORY_OWNER }}/${{ env.PE_REPOSITORY_NAME }}
                ref: refs/heads/${{ env.PE_REPOSITORY_BRUNCH }}
                path: Pe

            - name: <Setup> NPM
              shell: bash
              run: ls

            - name: <Add> Node/NPM
              uses: actions/setup-node@v4
              with:
                node-version-file: Pe/.node-version

            - name: <Setup> NPM
              shell: bash
              run: |
                cd Pe
                npm ci

            - name: <Build> template
              shell: bash
              run: |
                cd Pe
                npm run archive:plugin-template

            - name: <Artifact> template
              uses: actions/upload-artifact@v4
              with:
                name: plugin-template
                path: Pe/Source/Help/archives/plugin-template.zip
                if-no-files-found: error

    test-template:
        name: "test template"
        needs:
            - create-template
        runs-on: windows-latest

        steps:
            - name: <Setup> GIT
              shell: pwsh
              run: |
                git config --global core.autoCRLF false
                git config --global user.email ${{ github.actor }}@users.noreply.github.com
                git config --global user.name "${{ github.actor }}"

            - name: <Checkout> Repository
              uses: actions/checkout@v4

            - name: <Download> template
              uses: actions/download-artifact@v4
              with:
                name: plugin-template
                path: artifacts/plugin-template

            - name: <Expand> template
              shell: pwsh
              run: |
                Expand-Archive -Path artifacts/plugin-template/plugin-template.zip -DestinationPath plugin-template
                Get-ChildItem -LiteralPath plugin-template

            - name: <Initialize> template
              shell: pwsh
              run: |
                .\plugin-template\create-project.ps1 -ProjectDirectory \test-plugin -PluginId 00000000-0000-0000-0000-000000000000 -PluginName Test.Plugin -DefaultNamespace Test.Plugin
                Get-ChildItem -LiteralPath \test-plugin

            - name: <Push> template
              env:
                WORKFLOW_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
              shell: pwsh
              run: |
                Set-Location -Path \test-plugin
                $brunchName = "ci-test"
                git remote add origin https://${{ github.actor }}:github.com/${{ github.repository }}.git
                git remote set-url --push origin https://${{ github.actor }}:${{ env.WORKFLOW_TOKEN }}@github.com/${{ github.repository }}.git
                git checkout -b "${brunchName}"
                if("${{ inputs.PE_REVISION }}") {
                  "${{ inputs.PE_REVISION }}"
                  Push-Location -LiteralPath "Source\Pe"
                    git checkout "${{ inputs.PE_REVISION }}"
                  Pop-Location
                }
                git add .
                git commit -m "action: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                git push --force --set-upstream origin "${brunchName}"

            - name: <Artifact> template
              uses: actions/upload-artifact@v4
              with:
                name: plugin-test
                path: /test-plugin/**/*
